
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local Gui = Instance.new("ScreenGui")
Gui.Name = "UltraPremiumUI"
Gui.IgnoreGuiInset = true
Gui.ResetOnSpawn = false
Gui.DisplayOrder = 50
Gui.Parent = PlayerGui

local function tween(obj, time, props, style, direction)
	style = style or Enum.EasingStyle.Quad
	direction = direction or Enum.EasingDirection.Out
	TweenService:Create(obj, TweenInfo.new(time, style, direction), props):Play()
end

local Holder = Instance.new("Frame")
Holder.Name = "Holder"
Holder.Size = UDim2.new(0, 760, 0, 140)
Holder.Position = UDim2.new(0.5, -380, 0.08, 0)
Holder.AnchorPoint = Vector2.new(0.5, 0)
Holder.BackgroundColor3 = Color3.fromRGB(10,10,12)
Holder.BorderSizePixel = 0
Holder.Parent = Gui

local HolderCorner = Instance.new("UICorner")
HolderCorner.CornerRadius = UDim.new(0, 20)
HolderCorner.Parent = Holder

local HolderStroke = Instance.new("UIStroke")
HolderStroke.Color = Color3.fromRGB(20,60,120)
HolderStroke.Thickness = 1.6
HolderStroke.Transparency = 0.12
HolderStroke.Parent = Holder

local HolderGradient = Instance.new("UIGradient")
HolderGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(8,10,14)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(14,16,22))
}
HolderGradient.Rotation = 90
HolderGradient.Parent = Holder

local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, -24, 0, 44)
Header.Position = UDim2.new(0, 12, 0, 10)
Header.BackgroundTransparency = 0.05
Header.BackgroundColor3 = Color3.fromRGB(6,8,12)
Header.Parent = Holder

local HeaderCorner = Instance.new("UICorner")
HeaderCorner.CornerRadius = UDim.new(0, 14)
HeaderCorner.Parent = Header

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0.6, 0, 1, 0)
Title.Position = UDim2.new(0, 12, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Players"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(220,230,255)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

local SearchBox = Instance.new("TextBox")
SearchBox.Size = UDim2.new(0, 220, 0, 28)
SearchBox.Position = UDim2.new(1, -240, 0.5, -14)
SearchBox.AnchorPoint = Vector2.new(1, 0.5)
SearchBox.PlaceholderText = "Search players"
SearchBox.Font = Enum.Font.Gotham
SearchBox.TextSize = 14
SearchBox.Text = ""
SearchBox.BackgroundColor3 = Color3.fromRGB(12,14,18)
SearchBox.TextColor3 = Color3.fromRGB(220,230,255)
SearchBox.Parent = Header
local SearchCorner = Instance.new("UICorner")
SearchCorner.CornerRadius = UDim.new(0, 10)
SearchCorner.Parent = SearchBox
local SearchStroke = Instance.new("UIStroke")
SearchStroke.Color = Color3.fromRGB(18,40,90)
SearchStroke.Thickness = 1
SearchStroke.Transparency = 0.2
SearchStroke.Parent = SearchBox

local DragToggle = Instance.new("TextButton")
DragToggle.Size = UDim2.new(0, 86, 0, 30)
DragToggle.Position = UDim2.new(1, -310, 0.5, -15)
DragToggle.AnchorPoint = Vector2.new(1,0.5)
DragToggle.BackgroundColor3 = Color3.fromRGB(8,10,12)
DragToggle.AutoButtonColor = false
DragToggle.Parent = Header
local DragCorner = Instance.new("UICorner")
DragCorner.CornerRadius = UDim.new(0, 12)
DragCorner.Parent = DragToggle
local DragStroke = Instance.new("UIStroke")
DragStroke.Color = Color3.fromRGB(20,60,120)
DragStroke.Thickness = 1
DragStroke.Transparency = 0.2
DragStroke.Parent = DragToggle
local DragLabel = Instance.new("TextLabel")
DragLabel.Size = UDim2.new(0.6, -6, 1, 0)
DragLabel.Position = UDim2.new(0, 8, 0, 0)
DragLabel.BackgroundTransparency = 1
DragLabel.Text = "Drag"
DragLabel.Font = Enum.Font.Gotham
DragLabel.TextSize = 14
DragLabel.TextColor3 = Color3.fromRGB(190,200,230)
DragLabel.TextXAlignment = Enum.TextXAlignment.Left
DragLabel.Parent = DragToggle
local DragSwitch = Instance.new("Frame")
DragSwitch.Size = UDim2.new(0, 34, 0, 20)
DragSwitch.Position = UDim2.new(1, -40, 0.5, -10)
DragSwitch.BackgroundColor3 = Color3.fromRGB(24,28,36)
DragSwitch.Parent = DragToggle
local DragSwitchCorner = Instance.new("UICorner")
DragSwitchCorner.CornerRadius = UDim.new(1,0)
DragSwitchCorner.Parent = DragSwitch
local DragKnob = Instance.new("Frame")
DragKnob.Size = UDim2.new(0, 16, 0, 16)
DragKnob.Position = UDim2.new(0, 2, 0, 2)
DragKnob.BackgroundColor3 = Color3.fromRGB(200,210,240)
DragKnob.Parent = DragSwitch
local DragKnobCorner = Instance.new("UICorner")
DragKnobCorner.CornerRadius = UDim.new(1,0)
DragKnobCorner.Parent = DragKnob

local Scroll = Instance.new("ScrollingFrame")
Scroll.Size = UDim2.new(1, -24, 0, 68)
Scroll.Position = UDim2.new(0, 12, 0, 66)
Scroll.BackgroundTransparency = 1
Scroll.ScrollBarThickness = 6
Scroll.AutomaticCanvasSize = Enum.AutomaticSize.X
Scroll.ScrollingDirection = Enum.ScrollingDirection.X
Scroll.Parent = Holder
local ScrollCorner = Instance.new("UICorner")
ScrollCorner.CornerRadius = UDim.new(0, 14)
ScrollCorner.Parent = Scroll

local List = Instance.new("UIListLayout")
List.FillDirection = Enum.FillDirection.Horizontal
List.Padding = UDim.new(0, 12)
List.Parent = Scroll

local Padding = Instance.new("UIPadding")
Padding.PaddingLeft = UDim.new(0, 8)
Padding.Parent = Scroll

local Separator = Instance.new("Frame")
Separator.Size = UDim2.new(1, -24, 0, 8)
Separator.Position = UDim2.new(0, 12, 1, -14)
Separator.BackgroundTransparency = 0.06
Separator.BackgroundColor3 = Color3.fromRGB(6,8,12)
Separator.Parent = Holder
local SepCorner = Instance.new("UICorner")
SepCorner.CornerRadius = UDim.new(0, 8)
SepCorner.Parent = Separator

local ActivityFrame = Instance.new("Frame")
ActivityFrame.Size = UDim2.new(1, -24, 0, 40)
ActivityFrame.Position = UDim2.new(0, 12, 1, 4)
ActivityFrame.BackgroundTransparency = 0.04
ActivityFrame.BackgroundColor3 = Color3.fromRGB(6,8,12)
ActivityFrame.Parent = Holder
local ActivityCorner = Instance.new("UICorner")
ActivityCorner.CornerRadius = UDim.new(0, 10)
ActivityCorner.Parent = ActivityFrame
local ActivityLabel = Instance.new("TextLabel")
ActivityLabel.Size = UDim2.new(1, -16, 1, 0)
ActivityLabel.Position = UDim2.new(0, 8, 0, 0)
ActivityLabel.BackgroundTransparency = 1
ActivityLabel.Text = "Activity"
ActivityLabel.Font = Enum.Font.Gotham
ActivityLabel.TextSize = 14
ActivityLabel.TextColor3 = Color3.fromRGB(170,180,210)
ActivityLabel.TextXAlignment = Enum.TextXAlignment.Left
ActivityLabel.Parent = ActivityFrame

local Panel = Instance.new("Frame")
Panel.Size = UDim2.new(0, 340, 0, 420)
Panel.Position = UDim2.new(0.5, 0, 0.2, 60)
Panel.AnchorPoint = Vector2.new(0.5, 0)
Panel.BackgroundColor3 = Color3.fromRGB(8,10,14)
Panel.Visible = false
Panel.Parent = Gui
local PanelCorner = Instance.new("UICorner")
PanelCorner.CornerRadius = UDim.new(0, 18)
PanelCorner.Parent = Panel
local PanelStroke = Instance.new("UIStroke")
PanelStroke.Color = Color3.fromRGB(20,60,120)
PanelStroke.Thickness = 1.6
PanelStroke.Transparency = 0.12
PanelStroke.Parent = Panel
local PanelGradient = Instance.new("UIGradient")
PanelGradient.Rotation = 90
PanelGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(10,14,18)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(14,18,24))
}
PanelGradient.Parent = Panel

local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 28, 0, 28)
CloseBtn.Position = UDim2.new(1, -40, 0, 12)
CloseBtn.BackgroundColor3 = Color3.fromRGB(20,24,32)
CloseBtn.Text = "âœ•"
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.TextSize = 16
CloseBtn.TextColor3 = Color3.fromRGB(200,210,230)
CloseBtn.Parent = Panel
local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(1,0)
CloseCorner.Parent = CloseBtn

local BigAvatar = Instance.new("ImageLabel")
BigAvatar.Size = UDim2.new(0, 110, 0, 110)
BigAvatar.Position = UDim2.new(0.5, -55, 0, 28)
BigAvatar.BackgroundColor3 = Color3.fromRGB(245,245,250)
BigAvatar.BorderSizePixel = 0
BigAvatar.Parent = Panel
local BigAvatarCorner = Instance.new("UICorner")
BigAvatarCorner.CornerRadius = UDim.new(1,0)
BigAvatarCorner.Parent = BigAvatar

local NameLabel = Instance.new("TextLabel")
NameLabel.Size = UDim2.new(1, -24, 0, 30)
NameLabel.Position = UDim2.new(0, 12, 0, 150)
NameLabel.BackgroundTransparency = 1
NameLabel.Text = ""
NameLabel.Font = Enum.Font.GothamBold
NameLabel.TextSize = 20
NameLabel.TextColor3 = Color3.fromRGB(220,230,255)
NameLabel.TextXAlignment = Enum.TextXAlignment.Center
NameLabel.Parent = Panel

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, -24, 0, 20)
StatusLabel.Position = UDim2.new(0, 12, 0, 178)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = ""
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 14
StatusLabel.TextColor3 = Color3.fromRGB(160,180,210)
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
StatusLabel.Parent = Panel

local RedLine = Instance.new("Frame")
RedLine.Size = UDim2.new(0, 6, 0, 56)
RedLine.Position = UDim2.new(0.5, -3, 0, 188)
RedLine.BackgroundColor3 = Color3.fromRGB(220,50,70)
RedLine.Parent = Panel
local RedLineCorner = Instance.new("UICorner")
RedLineCorner.CornerRadius = UDim.new(0, 4)
RedLineCorner.Parent = RedLine

local NoteLabel = Instance.new("TextLabel")
NoteLabel.Size = UDim2.new(1, -36, 0, 18)
NoteLabel.Position = UDim2.new(0, 18, 0, 252)
NoteLabel.BackgroundTransparency = 1
NoteLabel.Text = "Note"
NoteLabel.Font = Enum.Font.Gotham
NoteLabel.TextSize = 14
NoteLabel.TextColor3 = Color3.fromRGB(180,190,210)
NoteLabel.TextXAlignment = Enum.TextXAlignment.Left
NoteLabel.Parent = Panel

local NoteBox = Instance.new("TextBox")
NoteBox.Size = UDim2.new(1, -36, 0, 46)
NoteBox.Position = UDim2.new(0, 18, 0, 274)
NoteBox.BackgroundColor3 = Color3.fromRGB(10,12,16)
NoteBox.TextColor3 = Color3.fromRGB(220,230,255)
NoteBox.PlaceholderText = "Write a note"
NoteBox.Font = Enum.Font.Gotham
NoteBox.TextSize = 14
NoteBox.Text = ""
NoteBox.Parent = Panel
local NoteCorner = Instance.new("UICorner")
NoteCorner.CornerRadius = UDim.new(0, 10)
NoteCorner.Parent = NoteBox

local FlingBtn = Instance.new("TextButton")
FlingBtn.Size = UDim2.new(0, 160, 0, 40)
FlingBtn.Position = UDim2.new(0.5, -80, 1, -60)
FlingBtn.Text = "Fling"
FlingBtn.Font = Enum.Font.GothamBold
FlingBtn.TextSize = 16
FlingBtn.TextColor3 = Color3.fromRGB(240,240,245)
FlingBtn.BackgroundColor3 = Color3.fromRGB(36,40,54)
FlingBtn.Parent = Panel
local FlingCorner = Instance.new("UICorner")
FlingCorner.CornerRadius = UDim.new(0, 12)
FlingCorner.Parent = FlingBtn

local LoopFrame = Instance.new("Frame")
LoopFrame.Size = UDim2.new(0, 160, 0, 36)
LoopFrame.Position = UDim2.new(0.5, -80, 1, -110)
LoopFrame.BackgroundTransparency = 1
LoopFrame.Parent = Panel
local LoopLabel = Instance.new("TextLabel")
LoopLabel.Size = UDim2.new(0.6, 0, 1, 0)
LoopLabel.Position = UDim2.new(0, 6, 0, 0)
LoopLabel.BackgroundTransparency = 1
LoopLabel.Text = "LoopFling"
LoopLabel.Font = Enum.Font.Gotham
LoopLabel.TextSize = 15
LoopLabel.TextColor3 = Color3.fromRGB(210,220,240)
LoopLabel.TextXAlignment = Enum.TextXAlignment.Left
LoopLabel.Parent = LoopFrame
local LoopToggle = Instance.new("TextButton")
LoopToggle.Size = UDim2.new(0, 52, 0, 26)
LoopToggle.Position = UDim2.new(1, -58, 0.5, -13)
LoopToggle.BackgroundColor3 = Color3.fromRGB(24,28,36)
LoopToggle.Text = ""
LoopToggle.Parent = LoopFrame
local LoopToggleCorner = Instance.new("UICorner")
LoopToggleCorner.CornerRadius = UDim.new(1,0)
LoopToggleCorner.Parent = LoopToggle
local LoopKnob = Instance.new("Frame")
LoopKnob.Size = UDim2.new(0, 22, 0, 22)
LoopKnob.Position = UDim2.new(0, 4, 0, 2)
LoopKnob.BackgroundColor3 = Color3.fromRGB(225,230,245)
LoopKnob.Parent = LoopToggle
local LoopKnobCorner = Instance.new("UICorner")
LoopKnobCorner.CornerRadius = UDim.new(1,0)
LoopKnobCorner.Parent = LoopKnob

local activeLoops = {}

local function setLoopUI(on)
	LoopToggle:SetAttribute("On", on and true or false)
	local bg = on and Color3.fromRGB(40,100,60) or Color3.fromRGB(24,28,36)
	local knobPos = on and UDim2.new(1, -26, 0, 2) or UDim2.new(0, 4, 0, 2)
	tween(LoopToggle, 0.18, {BackgroundColor3 = bg})
	tween(LoopKnob, 0.18, {Position = knobPos})
end

local function flingOnce(target)
	if not target or not target.Character or not LocalPlayer.Character then return end
	local success, err = pcall(function()
		LocalPlayer.Character.Picking:FireServer(target.Character.HumanoidRootPart, Vector3.new(math.huge, -math.huge, math.huge))
		task.wait(0.1)
		LocalPlayer.Character.PuttingDown:FireServer()
	end)
end

local function loopFlingWorker(targetUserId)
	while activeLoops[targetUserId] do
		local target = nil
		for _,p in pairs(Players:GetPlayers()) do
			if p.UserId == targetUserId then target = p break end
		end
		if target and target.Character and LocalPlayer.Character then
			local accs = nil
			for _,obj in pairs(target.Character:GetChildren()) do
				if obj:IsA("Accessory") then accs = obj break end
			end
			if accs then
				if accs:FindFirstChild("Handle") then
					pcall(function() LocalPlayer.Character.Picking:FireServer(accs.Handle, Vector3.new(math.huge, -math.huge, math.huge)) end)
				elseif accs:IsA("BasePart") then
					pcall(function() LocalPlayer.Character.Picking:FireServer(accs, Vector3.new(math.huge, -math.huge, math.huge)) end)
				end
			else
				pcall(function()
					LocalPlayer.Character.Picking:FireServer(target.Character.HumanoidRootPart, Vector3.new(math.huge, -math.huge, math.huge))
					task.wait(0.1)
					LocalPlayer.Character.PuttingDown:FireServer()
				end)
			end
		end
		task.wait(0.22)
	end
end

local function startLoopForUser(userId)
	if activeLoops[userId] then return end
	activeLoops[userId] = true
	task.spawn(loopFlingWorker, userId)
end

local function stopLoopForUser(userId)
	activeLoops[userId] = nil
end

local currentTarget = nil
local panelOpen = false

local function openPanelForPlayer(player, avatar)
	currentTarget = player
	ProfileImage = BigAvatar
	BigAvatar.Image = avatar
	NameLabel.Text = player.Name
	StatusLabel.Text = "Friend: "..tostring(player:IsFriendsWith(LocalPlayer.UserId))
	setLoopUI(activeLoops[player.UserId] == true)
	Panel.Visible = true
	Panel.Size = UDim2.new(0, 20, 0, 20)
	tween(Panel, 0.28, {Size = UDim2.new(0, 340, 0, 420)})
	tween(Panel, 0.28, {Position = UDim2.new(0.5, 0, 0.2, 60)})
	panelOpen = true
end

local function closePanel()
	if not panelOpen then return end
	tween(Panel, 0.22, {Size = UDim2.new(0, 20, 0, 20)})
	task.delay(0.22, function() Panel.Visible = false end)
	panelOpen = false
	currentTarget = nil
end

local function createAvatarButton(player)
	local btn = Instance.new("ImageButton")
	btn.Name = "p_"..player.UserId
	btn.Size = UDim2.new(0, 64, 0, 64)
	btn.BackgroundColor3 = Color3.fromRGB(12,14,18)
	btn.AutoButtonColor = false
	btn.Parent = Scroll
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(1,0)
	corner.Parent = btn
	local stroke = Instance.new("UIStroke")
	stroke.Color = Color3.fromRGB(20,60,120)
	stroke.Thickness = 1
	stroke.Transparency = 0.12
	stroke.Parent = btn
	local badge = Instance.new("TextLabel")
	badge.Size = UDim2.new(0, 18, 0, 18)
	badge.Position = UDim2.new(1, -14, 0, -6)
	badge.BackgroundColor3 = Color3.fromRGB(20,60,120)
	badge.Text = ""
	badge.Visible = false
	badge.Parent = btn
	local badgeCorner = Instance.new("UICorner")
	badgeCorner.CornerRadius = UDim.new(1,0)
	badgeCorner.Parent = badge
	local avatar, _ = Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
	btn.Image = avatar
	btn.ScaleType = Enum.ScaleType.Crop
	btn.MouseEnter:Connect(function() tween(btn, 0.12, {Size = UDim2.new(0, 70, 0, 70)}) end)
	btn.MouseLeave:Connect(function() tween(btn, 0.12, {Size = UDim2.new(0, 64, 0, 64)}) end)
	btn.Activated:Connect(function()
		if currentTarget and currentTarget.UserId == player.UserId and panelOpen then
			closePanel()
			return
		end
		openPanelForPlayer(player, avatar)
	end)
	if player:IsFriendsWith(LocalPlayer.UserId) then
		badge.Visible = true
		badge.Text = "â˜…"
		badge.Font = Enum.Font.GothamBold
		badge.TextSize = 12
		badge.TextColor3 = Color3.fromRGB(220,230,255)
	end
	return btn
end

local function rebuildScroll(query)
	for _,c in pairs(Scroll:GetChildren()) do
		if c:IsA("ImageButton") then c:Destroy() end
	end
	local friends = {}
	local normals = {}
	for _,p in pairs(Players:GetPlayers()) do
		if p == LocalPlayer then continue end
		if p:IsFriendsWith(LocalPlayer.UserId) then table.insert(friends, p) else table.insert(normals, p) end
	end
	table.sort(friends, function(a,b) return a.Name:lower() < b.Name:lower() end)
	table.sort(normals, function(a,b) return a.Name:lower() < b.Name:lower() end)
	for _,p in pairs(friends) do
		local thumb = Players:GetUserThumbnailAsync(p.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
		createAvatarButton(p)
	end
	for _,p in pairs(normals) do
		local thumb = Players:GetUserThumbnailAsync(p.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
		createAvatarButton(p)
	end
end

Players.PlayerAdded:Connect(function(p)
	rebuildScroll(SearchBox.Text)
	if activeLoops[p.UserId] then
		startLoopForUser(p.UserId)
	end
end)
Players.PlayerRemoving:Connect(function(p)
	if activeLoops[p.UserId] then
		activeLoops[p.UserId] = true
	end
end)

SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
	rebuildScroll(SearchBox.Text)
end)

FlingBtn.Activated:Connect(function()
	if currentTarget then
		flingOnce(currentTarget)
	end
end)

LoopToggle.Activated:Connect(function()
	if not currentTarget then return end
	local uid = currentTarget.UserId
	local on = not (LoopToggle:GetAttribute("On") == true)
	LoopToggle:SetAttribute("On", on)
	setLoopUI(on)
	if on then
		startLoopForUser(uid)
	else
		stopLoopForUser(uid)
	end
end)

CloseBtn.Activated:Connect(function()
	closePanel()
end)

local dragging = false
local dragStart = nil
local panelStart = nil
Panel.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		panelStart = Panel.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if not dragging then return end
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		Panel.Position = UDim2.new(panelStart.X.Scale, panelStart.X.Offset + delta.X, panelStart.Y.Scale, panelStart.Y.Offset + delta.Y)
	end
end)

local dragEnabled = false
DragToggle.Activated:Connect(function()
	dragEnabled = not dragEnabled
	local on = dragEnabled
	local targetPos = on and UDim2.new(1, -20, 0.5, -10) or UDim2.new(1, -40, 0.5, -15)
	local bg = on and Color3.fromRGB(20,60,120) or Color3.fromRGB(8,10,12)
	tween(DragKnob, 0.18, {Position = on and UDim2.new(1, -18, 0, 2) or UDim2.new(0, 2, 0, 2)})
	tween(DragSwitch, 0.18, {BackgroundColor3 = bg})
end)

local holderDragging = false
local holderStart, holderPos
Holder.InputBegan:Connect(function(input)
	if not dragEnabled then return end
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		holderDragging = true
		holderStart = input.Position
		holderPos = Holder.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then holderDragging = false end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if not holderDragging then return end
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - holderStart
		Holder.Position = UDim2.new(holderPos.X.Scale, holderPos.X.Offset + delta.X, holderPos.Y.Scale, holderPos.Y.Offset + delta.Y)
	end
end)

rebuildScroll("")
Panel.Visible = false
Panel.Size = UDim2.new(0, 20, 0, 20)
Panel.Position = UDim2.new(0.5, 0, 0.2, 60)

LocalPlayer.CharacterAdded:Connect(function(char)
	task.spawn(function()
		local hum = char:WaitForChild("Humanoid", 5)
		if not hum then return end
		while hum.Parent and hum.Health > 0 do
			hum.MaxHealth = math.huge
			hum.Health = math.huge
			task.wait(0.1)
		end
	end)
end)
