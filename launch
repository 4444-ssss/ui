local library = {}
local uis = game:GetService("UserInputService")
local ts = game:GetService("TweenService")
local http = game:GetService("HttpService")
local configFolder = "Nox_UI_Configs"
if not isfolder(configFolder) then makefolder(configFolder) end
local themes = {
    Dark = {bg=Color3.fromRGB(25,25,25),top=Color3.fromRGB(40,40,40),text=Color3.fromRGB(255,255,255),accent=Color3.fromRGB(200,0,0),accentOn=Color3.fromRGB(0,200,0)},
    Light = {bg=Color3.fromRGB(245,245,245),top=Color3.fromRGB(230,230,230),text=Color3.fromRGB(0,0,0),accent=Color3.fromRGB(200,0,0),accentOn=Color3.fromRGB(0,200,0)}
}
local currentTheme = themes.Dark
local toggleIndicatorPos = "Bottom"
local toggleIndicatorSize = UDim2.new(1,0,0,2)
local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Parent = game.CoreGui
local main = Instance.new("Frame")
main.Size = UDim2.new(0,450,0,300)
main.BackgroundColor3 = currentTheme.bg
main.Position = UDim2.new(0.3,0,0.3,0)
main.Active = true
main.Draggable = true
main.Parent = gui
local topbar = Instance.new("TextLabel")
topbar.Size = UDim2.new(1,0,0,30)
topbar.BackgroundColor3 = currentTheme.top
topbar.Text = "Made by Nox (Realn0xz) | Version 1.3"
topbar.TextColor3 = currentTheme.text
topbar.Font = Enum.Font.SourceSansBold
topbar.TextSize = 18
topbar.Parent = main
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(1,0,0,25)
tabsFrame.Position = UDim2.new(0,0,0,30)
tabsFrame.BackgroundTransparency = 1
tabsFrame.Parent = main
local pagesFrame = Instance.new("Frame")
pagesFrame.Size = UDim2.new(1,0,1,-55)
pagesFrame.Position = UDim2.new(0,0,0,55)
pagesFrame.BackgroundTransparency = 1
pagesFrame.Parent = main
local minimize = false
topbar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        minimize = not minimize
        if minimize then
            ts:Create(main,TweenInfo.new(0.3),{Size=UDim2.new(0,450,0,30)}):Play()
        else
            ts:Create(main,TweenInfo.new(0.3),{Size=UDim2.new(0,450,0,300)}):Play()
        end
    end
end)
local tabButtons = {}
local pages = {}
function library:AddTab(name)
    local tabBtn = Instance.new("TextButton")
    tabBtn.Size = UDim2.new(0,80,1,0)
    tabBtn.BackgroundColor3 = currentTheme.top
    tabBtn.Text = name
    tabBtn.TextColor3 = currentTheme.text
    tabBtn.Font = Enum.Font.SourceSans
    tabBtn.TextSize = 16
    tabBtn.Parent = tabsFrame
    tabBtn.Position = UDim2.new(#tabButtons*0.18,0,0,0)
    local page = Instance.new("Frame")
    page.Size = UDim2.new(1,0,1,0)
    page.BackgroundTransparency = 1
    page.Visible = false
    page.Parent = pagesFrame
    tabBtn.MouseButton1Click:Connect(function()
        for _,pg in pairs(pages) do pg.Visible = false end
        for _,b in pairs(tabButtons) do b.BackgroundColor3 = currentTheme.top end
        page.Visible = true
        tabBtn.BackgroundColor3 = currentTheme.bg
    end)
    table.insert(tabButtons,tabBtn)
    table.insert(pages,page)
    return page
end
function library:AddToggle(parent,text,default,callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0,150,0,25)
    frame.BackgroundColor3 = currentTheme.bg
    frame.Parent = parent
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1,0,1,0)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = currentTheme.text
    lbl.Font = Enum.Font.SourceSans
    lbl.TextSize = 16
    lbl.Parent = frame
    local indicator = Instance.new("Frame")
    indicator.Size = toggleIndicatorSize
    indicator.BackgroundColor3 = default and currentTheme.accentOn or currentTheme.accent
    indicator.BorderSizePixel = 0
    indicator.Parent = frame
    if toggleIndicatorPos == "Bottom" then indicator.Position = UDim2.new(0,0,1,-toggleIndicatorSize.Y.Offset)
    elseif toggleIndicatorPos == "Top" then indicator.Position = UDim2.new(0,0,0,0)
    elseif toggleIndicatorPos == "Left" then indicator.Size = UDim2.new(0,4,1,0) indicator.Position = UDim2.new(0,0,0,0)
    elseif toggleIndicatorPos == "Right" then indicator.Size = UDim2.new(0,4,1,0) indicator.Position = UDim2.new(1,-4,0,0) end
    local state = default
    frame.InputBegan:Connect(function(i)
        if i.UserInputType == Enum.UserInputType.MouseButton1 then
            state = not state
            indicator.BackgroundColor3 = state and currentTheme.accentOn or currentTheme.accent
            if callback then callback(state) end
        end
    end)
end
function library:AddButton(parent,text,callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,150,0,25)
    btn.BackgroundColor3 = currentTheme.top
    btn.Text = text
    btn.TextColor3 = currentTheme.text
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 16
    btn.Parent = parent
    btn.MouseButton1Click:Connect(function()
        if callback then callback() end
    end)
end
function library:AddBox(parent,placeholder,callback)
    local box = Instance.new("TextBox")
    box.Size = UDim2.new(0,150,0,25)
    box.BackgroundColor3 = currentTheme.bg
    box.BackgroundTransparency = 0.2
    box.PlaceholderText = placeholder
    box.TextColor3 = currentTheme.text
    box.Font = Enum.Font.SourceSans
    box.TextSize = 16
    box.Parent = parent
    box.FocusLost:Connect(function(enter)
        if enter and callback then callback(box.Text) end
    end)
end
function library:AddDropdown(parent,text,options,callback)
    local drop = Instance.new("TextButton")
    drop.Size = UDim2.new(0,150,0,25)
    drop.BackgroundColor3 = currentTheme.top
    drop.Text = text
    drop.TextColor3 = currentTheme.text
    drop.Font = Enum.Font.SourceSans
    drop.TextSize = 16
    drop.Parent = parent
    local open = false
    local listFrame = Instance.new("Frame")
    listFrame.Size = UDim2.new(0,150,0,#options*25)
    listFrame.Position = UDim2.new(0,0,1,0)
    listFrame.BackgroundColor3 = currentTheme.bg
    listFrame.Visible = false
    listFrame.Parent = drop
    for _,opt in ipairs(options) do
        local optBtn = Instance.new("TextButton")
        optBtn.Size = UDim2.new(1,0,0,25)
        optBtn.BackgroundColor3 = currentTheme.top
        optBtn.Text = opt
        optBtn.TextColor3 = currentTheme.text
        optBtn.Font = Enum.Font.SourceSans
        optBtn.TextSize = 16
        optBtn.Parent = listFrame
        optBtn.MouseButton1Click:Connect(function()
            drop.Text = opt
            listFrame.Visible = false
            open = false
            if callback then callback(opt) end
        end)
    end
    drop.MouseButton1Click:Connect(function()
        open = not open
        listFrame.Visible = open
    end)
end
function library:SaveConfig(name,data)
    writefile(configFolder.."/"..name..".json",http:JSONEncode(data))
end
function library:LoadConfig(name)
    local path = configFolder.."/"..name..".json"
    if isfile(path) then
        return http:JSONDecode(readfile(path))
    end
end
function library:SetTheme(themeName)
    if themes[themeName] then
        currentTheme = themes[themeName]
    end
end
return library
