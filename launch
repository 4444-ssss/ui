local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local parent = (gethui and gethui()) or game:GetService("CoreGui")
local UILibrary = {}
UILibrary.__index = UILibrary
local function new(inst, props, children)
    local obj = Instance.new(inst)
    for k,v in pairs(props or {}) do
        obj[k] = v
    end
    for _,c in ipairs(children or {}) do
        c.Parent = obj
    end
    return obj
end
local function tween(obj, props, t, style, direction)
    TweenService:Create(obj, TweenInfo.new(t or 0.18, style or Enum.EasingStyle.Quad, direction or Enum.EasingDirection.Out), props):Play()
end
local function round(v) return math.floor(v+0.5) end
function UILibrary:CreateWindow(title, opts)
    opts = opts or {}
    local theme = opts.Theme or "Dark"
    local gui = new("ScreenGui", {Name = opts.Name or "UltraUI", Parent = parent, ZIndexBehavior = Enum.ZIndexBehavior.Sibling, ResetOnSpawn = false})
    local backdrop = new("Frame", {Parent = gui, AnchorPoint = Vector2.new(0.5,0.5), Position = UDim2.new(0.5,0.5), Size = UDim2.new(0,820,0,520), BackgroundTransparency = 0, BackgroundColor3 = theme == "Dark" and Color3.fromRGB(13,15,20) or Color3.fromRGB(245,248,252)})
    new("UICorner", {Parent = backdrop, CornerRadius = UDim.new(0,16)})
    new("UIStroke", {Parent = backdrop, Color = theme == "Dark" and Color3.fromRGB(48,58,85) or Color3.fromRGB(200,200,200), Thickness = 1, Transparency = 0.2})
    local header = new("Frame", {Parent = backdrop, Size = UDim2.new(1,0,0,56), BackgroundTransparency = 0, BackgroundColor3 = theme == "Dark" and Color3.fromRGB(20,24,34) or Color3.fromRGB(255,255,255)})
    new("UICorner", {Parent = header, CornerRadius = UDim.new(0,16)})
    local titleLbl = new("TextLabel", {Parent = header, Position = UDim2.new(0,20,0,8), Size = UDim2.new(0,400,0,40), BackgroundTransparency = 1, Font = Enum.Font.GothamSemibold, Text = title or "Ultra UI", TextSize = 20, TextColor3 = theme == "Dark" and Color3.fromRGB(235,239,246) or Color3.fromRGB(18,18,18), TextXAlignment = Enum.TextXAlignment.Left})
    local rightBar = new("Frame", {Parent = header, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,-18,0.5,0), Size = UDim2.new(0,160,0,40), BackgroundTransparency = 1})
    local addTabBtn = new("TextButton", {Parent = rightBar, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,0,0.5,0), Size = UDim2.new(0,38,0,30), BackgroundColor3 = theme == "Dark" and Color3.fromRGB(40,48,68) or Color3.fromRGB(230,230,235), AutoButtonColor = false, Text = "＋", Font = Enum.Font.GothamBold, TextSize = 18, TextColor3 = theme == "Dark" and Color3.fromRGB(235,239,246) or Color3.fromRGB(30,30,30)})
    new("UICorner", {Parent = addTabBtn, CornerRadius = UDim.new(0,10)})
    local tabsFrame = new("Frame", {Parent = backdrop, Position = UDim2.new(0,16,0,74), Size = UDim2.new(1,-32,0,44), BackgroundTransparency = 1})
    new("UICorner", {Parent = tabsFrame, CornerRadius = UDim.new(0,12)})
    local tabsList = new("ScrollingFrame", {Parent = tabsFrame, Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, ScrollBarThickness = 0, CanvasSize = UDim2.new(1,0,0,0), AutomaticCanvasSize = Enum.AutomaticSize.X})
    local tabsLayout = new("UIListLayout", {Parent = tabsList, FillDirection = Enum.FillDirection.Horizontal, HorizontalAlignment = Enum.HorizontalAlignment.Left, VerticalAlignment = Enum.VerticalAlignment.Center, Padding = UDim.new(0,8)})
    local pages = new("Frame", {Parent = backdrop, Position = UDim2.new(0,16,0,132), Size = UDim2.new(1,-32,1,-148), BackgroundTransparency = 1, ClipsDescendants = true})
    local notifyHolder = new("Frame", {Parent = gui, AnchorPoint = Vector2.new(1,1), Position = UDim2.new(1,-18,1,-18), Size = UDim2.new(0,320,0,1), BackgroundTransparency = 1})
    local dragging, dragStart, startPos = false, nil, nil
    header.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true; dragStart = i.Position; startPos = backdrop.Position end end)
    header.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end end)
    UserInputService.InputChanged:Connect(function(i) if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then local d = i.Position - dragStart; backdrop.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + d.X, startPos.Y.Scale, startPos.Y.Offset + d.Y) end end)
    local self = setmetatable({Gui = gui, Backdrop = backdrop, Tabs = {}, Pages = pages, TabsList = tabsList, Theme = theme, NotifyHolder = notifyHolder}, UILibrary)
    function self:NewTab(name)
        local id = #self.Tabs + 1
        local btn = new("TextButton", {Parent = self.TabsList, Size = UDim2.new(0,160,0,36), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(30,36,50) or Color3.fromRGB(245,245,248), AutoButtonColor = false, Text = name or ("Tab "..id), Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(210,218,238) or Color3.fromRGB(35,35,35)})
        new("UICorner", {Parent = btn, CornerRadius = UDim.new(0,12)})
        local closeBtn = new("TextButton", {Parent = btn, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,-8,0.5,0), Size = UDim2.new(0,28,0,24), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(44,52,70) or Color3.fromRGB(230,230,235), AutoButtonColor = false, Text = "✕", Font = Enum.Font.GothamBold, TextSize = 12, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(200,210,230) or Color3.fromRGB(90,90,90)})
        new("UICorner", {Parent = closeBtn, CornerRadius = UDim.new(0,8)})
        local page = new("Frame", {Parent = self.Pages, Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, Visible = false})
        self.Tabs[#self.Tabs+1] = {Button = btn, Close = closeBtn, Page = page, Name = name}
        local function select()
            for _,t in ipairs(self.Tabs) do
                t.Button.BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(30,36,50) or Color3.fromRGB(245,245,248)
                t.Button.TextColor3 = self.Theme == "Dark" and Color3.fromRGB(210,218,238) or Color3.fromRGB(35,35,35)
                t.Close.Visible = false
                t.Page.Visible = false
            end
            btn.BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(46,56,82) or Color3.fromRGB(235,235,238)
            btn.TextColor3 = self.Theme == "Dark" and Color3.fromRGB(255,255,255) or Color3.fromRGB(12,12,12)
            closeBtn.Visible = true
            page.Visible = true
        end
        btn.MouseButton1Click:Connect(select)
        closeBtn.MouseButton1Click:Connect(function() for i,t in ipairs(self.Tabs) do if t.Button == btn then t.Button:Destroy(); t.Page:Destroy(); table.remove(self.Tabs, i); break end end if #self.Tabs>0 then self.Tabs[1].Button.MouseButton1Click:Fire() end end)
        if #self.Tabs == 1 then select() end
        return {
            AddToggle = function(_,label,default,callback)
                local container = new("Frame",{Parent = page, Size = UDim2.new(1,0,0,44), BackgroundTransparency = 1})
                local lbl = new("TextLabel",{Parent = container, Position = UDim2.new(0,8,0,8), Size = UDim2.new(0,220,0,28), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = label or "Toggle", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(224,230,245) or Color3.fromRGB(28,28,28), TextXAlignment = Enum.TextXAlignment.Left})
                local toggleBtn = new("TextButton",{Parent = container, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,-12,0.5,0), Size = UDim2.new(0,50,0,28), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(44,54,74) or Color3.fromRGB(240,240,245), AutoButtonColor = false, Text = "",})
                new("UICorner",{Parent = toggleBtn, CornerRadius = UDim.new(0,12)})
                local knob = new("Frame",{Parent = toggleBtn, Position = UDim2.new(default and 1 or 0, default and -22 or 4,0.5,-10), Size = UDim2.new(0,20,0,20), BackgroundColor3 = default and Color3.fromRGB(60,180,120) or Color3.fromRGB(220,220,220)})
                new("UICorner",{Parent = knob, CornerRadius = UDim.new(0,10)})
                local state = default or false
                toggleBtn.MouseButton1Click:Connect(function()
                    state = not state
                    tween(knob, {Position = state and UDim2.new(1,-22,0.5,-10) or UDim2.new(0,4,0.5,-10)}, 0.17)
                    tween(knob, {BackgroundColor3 = state and Color3.fromRGB(60,180,120) or Color3.fromRGB(220,220,220)}, 0.17)
                    pcall(callback, state)
                end)
                if state then knob.Position = UDim2.new(1,-22,0.5,-10); knob.BackgroundColor3 = Color3.fromRGB(60,180,120) end
                return container
            end,
            AddButton = function(_,label,callback)
                local btn = new("TextButton",{Parent = page, Size = UDim2.new(0,160,0,36), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(48,58,86) or Color3.fromRGB(245,245,248), AutoButtonColor = false, Text = label or "Button", Font = Enum.Font.GothamBold, TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(236,240,246) or Color3.fromRGB(24,24,24)})
                new("UICorner",{Parent = btn, CornerRadius = UDim.new(0,10)})
                btn.MouseButton1Click:Connect(function() pcall(callback) end)
                return btn
            end,
            AddLabel = function(_,text)
                local lbl = new("TextLabel",{Parent = page, Size = UDim2.new(1,0,0,28), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = text or "", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(210,218,238) or Color3.fromRGB(40,40,40), TextXAlignment = Enum.TextXAlignment.Left})
                return lbl
            end,
            AddTextbox = function(_,placeholder,default,callback)
                local box = new("TextBox",{Parent = page, Size = UDim2.new(1,0,0,36), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(18,20,28) or Color3.fromRGB(250,250,252), Font = Enum.Font.Code, Text = default or "", PlaceholderText = placeholder or "", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(230,235,245) or Color3.fromRGB(24,24,24)})
                new("UICorner",{Parent = box, CornerRadius = UDim.new(0,8)})
                box.FocusLost:Connect(function(enter) pcall(callback, box.Text) end)
                return box
            end,
            AddSlider = function(_,label,default,min,max,callback)
                local container = new("Frame",{Parent = page, Size = UDim2.new(1,0,0,56), BackgroundTransparency = 1})
                local lbl = new("TextLabel",{Parent = container, Position = UDim2.new(0,8,0,6), Size = UDim2.new(0,160,0,20), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = label or "Slider", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(224,230,245) or Color3.fromRGB(28,28,28), TextXAlignment = Enum.TextXAlignment.Left})
                local valLbl = new("TextLabel",{Parent = container, AnchorPoint = Vector2.new(1,0), Position = UDim2.new(1,-12,0,6), Size = UDim2.new(0,80,0,20), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = tostring(default or min or 0), TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(200,210,230) or Color3.fromRGB(28,28,28), TextXAlignment = Enum.TextXAlignment.Right})
                local bar = new("Frame",{Parent = container, Position = UDim2.new(0,8,0,30), Size = UDim2.new(1,-16,0,10), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(34,44,66) or Color3.fromRGB(235,235,240)})
                new("UICorner",{Parent = bar, CornerRadius = UDim.new(0,8)})
                local fill = new("Frame",{Parent = bar, Size = UDim2.new(0,0,1,0), BackgroundColor3 = Color3.fromRGB(90,160,255)})
                new("UICorner",{Parent = fill, CornerRadius = UDim.new(0,8)})
                local knob = new("Frame",{Parent = bar, AnchorPoint = Vector2.new(0.5,0.5), Position = UDim2.new(0,0,0.5,0), Size = UDim2.new(0,14,0,14), BackgroundColor3 = Color3.fromRGB(240,240,240)})
                new("UICorner",{Parent = knob, CornerRadius = UDim.new(0,8)})
                local minv, maxv, cur = min or 0, max or 100, default or min or 0
                local function updateFromX(x)
                    local abs = x - bar.AbsolutePosition.X
                    local pct = math.clamp(abs / bar.AbsoluteSize.X, 0, 1)
                    cur = minv + pct * (maxv - minv)
                    fill.Size = UDim2.new(pct,0,1,0)
                    knob.Position = UDim2.new(pct,0,0.5,0)
                    valLbl.Text = tostring(round(cur))
                    pcall(callback, cur)
                end
                local draggingS = false
                knob.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingS = true end end)
                knob.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingS = false end end)
                bar.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then updateFromX(i.Position.X) end end)
                UserInputService.InputChanged:Connect(function(i) if draggingS and i.UserInputType == Enum.UserInputType.MouseMovement then updateFromX(UserInputService:GetMouseLocation().X) end end)
                updateFromX(bar.AbsolutePosition.X + (cur - minv)/(maxv - minv) * bar.AbsoluteSize.X)
                return container
            end,
            AddDropdown = function(_,label,items,callback)
                local container = new("Frame",{Parent = page, Size = UDim2.new(1,0,0,36), BackgroundTransparency = 1})
                local lbl = new("TextLabel",{Parent = container, Position = UDim2.new(0,8,0,6), Size = UDim2.new(0,200,0,24), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = label or "Dropdown", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(224,230,245) or Color3.fromRGB(28,28,28), TextXAlignment = Enum.TextXAlignment.Left})
                local box = new("TextButton",{Parent = container, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,-12,0.5,0), Size = UDim2.new(0,220,0,28), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(24,30,40) or Color3.fromRGB(250,250,252), AutoButtonColor = false, Text = items[1] or "", Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(220,228,240) or Color3.fromRGB(30,30,30)})
                new("UICorner",{Parent = box, CornerRadius = UDim.new(0,8)})
                local open = false
                local list = new("Frame",{Parent = container, AnchorPoint = Vector2.new(1,0), Position = UDim2.new(1,-12,1,6), Size = UDim2.new(0,220,0,0), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(18,20,28) or Color3.fromRGB(255,255,255), ClipsDescendants = true})
                new("UICorner",{Parent = list, CornerRadius = UDim.new(0,8)})
                local layout = new("UIListLayout",{Parent = list, Padding = UDim.new(0,2)})
                for _,v in ipairs(items) do
                    local it = new("TextButton",{Parent = list, Size = UDim2.new(1,0,0,32), BackgroundTransparency = 1, AutoButtonColor = false, Text = v, Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(220,228,240) or Color3.fromRGB(28,28,28)})
                    it.MouseButton1Click:Connect(function() box.Text = v; pcall(callback, v); tween(list, {Size = UDim2.new(0,220,0,0)}, 0.18); open = false end)
                end
                box.MouseButton1Click:Connect(function() if open then tween(list, {Size = UDim2.new(0,220,0,0)}, 0.18) else tween(list, {Size = UDim2.new(0,220,0,math.min(200,#items*34)} , 0.18) end open = not open end)
                return container
            end,
            AddColorPicker = function(_,label,default,callback)
                local container = new("Frame",{Parent = page, Size = UDim2.new(1,0,0,120), BackgroundTransparency = 1})
                local lbl = new("TextLabel",{Parent = container, Position = UDim2.new(0,8,0,6), Size = UDim2.new(0,200,0,20), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = label or "Color", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(224,230,245) or Color3.fromRGB(28,28,28), TextXAlignment = Enum.TextXAlignment.Left})
                local preview = new("Frame",{Parent = container, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,-12,0.5,0), Size = UDim2.new(0,36,0,36), BackgroundColor3 = default or Color3.fromRGB(255,0,0)})
                new("UICorner",{Parent = preview, CornerRadius = UDim.new(0,8)})
                local picker = new("ImageButton",{Parent = container, Position = UDim2.new(0,8,0,32), Size = UDim2.new(0,240,0,72), BackgroundTransparency = 1, Image = "rbxassetid://4155801256"})
                local open = false
                local panel = new("Frame",{Parent = container, Position = UDim2.new(0,260,0,32), Size = UDim2.new(0,0,0,72), BackgroundTransparency = 1})
                local function setColor(c)
                    preview.BackgroundColor3 = c
                    pcall(callback, c)
                end
                picker.MouseButton1Click:Connect(function()
                    if open then tween(panel, {Size = UDim2.new(0,0,0,72)}, 0.18) else tween(panel, {Size = UDim2.new(0,240,0,72)}, 0.18) end
                    open = not open
                end)
                local hue = new("ImageButton",{Parent = panel, Position = UDim2.new(0,0,0,0), Size = UDim2.new(0,24,1,0), BackgroundTransparency = 1, Image = "rbxassetid://7743345715"})
                local satval = new("ImageButton",{Parent = panel, Position = UDim2.new(0,26,0,0), Size = UDim2.new(0,208,1,0), BackgroundTransparency = 1, Image = "rbxassetid://7743345715"})
                local draggingHue, draggingSV = false, false
                hue.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingHue = true end end)
                hue.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingHue = false end end)
                satval.InputBegan:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingSV = true end end)
                satval.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then draggingSV = false end end)
                local H,S,V = 0,1,1
                local function updateFromMouse()
                    local mp = UserInputService:GetMouseLocation()
                    local hu = math.clamp((mp.Y - hue.AbsolutePosition.Y)/hue.AbsoluteSize.Y, 0, 1)
                    H = 1 - hu
                    local svx = math.clamp((mp.X - satval.AbsolutePosition.X)/satval.AbsoluteSize.X, 0, 1)
                    local svy = math.clamp((mp.Y - satval.AbsolutePosition.Y)/satval.AbsoluteSize.Y, 0, 1)
                    S = svx
                    V = 1 - svy
                    local function hsvToRgb(h,s,v)
                        local i = math.floor(h*6)
                        local f = h*6 - i
                        local p = v*(1-s)
                        local q = v*(1-f*s)
                        local t = v*(1-(1-f)*s)
                        local r,g,b
                        i = i%6
                        if i == 0 then r,g,b = v,t,p elseif i==1 then r,g,b=v,q,p elseif i==2 then r,g,b=t,v,p elseif i==3 then r,g,b=p,v,q elseif i==4 then r,g,b=p,t,v else r,g,b=v,p,q end
                        return Color3.new(r,g,b)
                    end
                    setColor(hsvToRgb(H,S,V))
                end
                RunService.Heartbeat:Connect(function()
                    if draggingHue or draggingSV then updateFromMouse() end
                end)
                return container
            end,
            AddBind = function(_,label,key,callback)
                local container = new("Frame",{Parent = page, Size = UDim2.new(1,0,0,36), BackgroundTransparency = 1})
                local lbl = new("TextLabel",{Parent = container, Position = UDim2.new(0,8,0,6), Size = UDim2.new(0,200,0,24), BackgroundTransparency = 1, Font = Enum.Font.Gotham, Text = label or "Bind", TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(224,230,245) or Color3.fromRGB(28,28,28), TextXAlignment = Enum.TextXAlignment.Left})
                local keyBtn = new("TextButton",{Parent = container, AnchorPoint = Vector2.new(1,0.5), Position = UDim2.new(1,-12,0.5,0), Size = UDim2.new(0,120,0,28), BackgroundColor3 = self.Theme == "Dark" and Color3.fromRGB(24,30,40) or Color3.fromRGB(250,250,252), AutoButtonColor = false, Text = tostring(key or "None"), Font = Enum.Font.Gotham, TextSize = 14, TextColor3 = self.Theme == "Dark" and Color3.fromRGB(220,228,240) or Color3.fromRGB(30,30,30)})
                new("UICorner",{Parent = keyBtn, CornerRadius = UDim.new(0,8)})
                local waiting = false
                keyBtn.MouseButton1Click:Connect(function()
                    waiting = true
                    keyBtn.Text = "Press..."
                    local conn
                    conn = UserInputService.InputBegan:Connect(function(i,gp)
                        if gp then return end
                        if i.UserInputType == Enum.UserInputType.Keyboard then
                            key = i.KeyCode
                            keyBtn.Text = tostring(key)
                            waiting = false
                            conn:Disconnect()
                        end
                    end)
                end)
                UserInputService.InputBegan:Connect(function(i,gp) if gp then return end if i.UserInputType == Enum.UserInputType.Keyboard and i.KeyCode == key then pcall(callback) end end)
                return container
            end
        }
    end
    addTabBtn.MouseButton1Click:Connect(function() local t = self:NewTab("Tab "..(#self.Tabs+1)) end)
    return self
end
function UILibrary:Notify(text, duration)
    local holder = Instance.new("Frame", self.NotifyHolder)
    holder.Size = UDim2.new(1,0,0,0)
    holder.BackgroundTransparency = 1
    holder.LayoutOrder = os.clock()*1000
    local card = Instance.new("Frame", holder)
    card.AnchorPoint = Vector2.new(1,1)
    card.Position = UDim2.new(1,0,1,12)
    card.Size = UDim2.new(1,0,0,48)
    card.BackgroundColor3 = Color3.fromRGB(25,31,45)
    local uc = Instance.new("UICorner", card); uc.CornerRadius = UDim.new(0,12)
    local stroke = Instance.new("UIStroke", card); stroke.Color = Color3.fromRGB(58,69,97); stroke.Transparency = 0.15
    local lbl = Instance.new("TextLabel", card)
    lbl.Position = UDim2.new(0,12,0,8)
    lbl.Size = UDim2.new(1,-48,0,32)
    lbl.BackgroundTransparency = 1
    lbl.Font = Enum.Font.Gotham
    lbl.Text = text or ""
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.fromRGB(234,238,245)
    local close = Instance.new("TextButton", card)
    close.AnchorPoint = Vector2.new(1,0.5)
    close.Position = UDim2.new(1,-12,0.5,0)
    close.Size = UDim2.new(0,28,0,28)
    close.BackgroundColor3 = Color3.fromRGB(42,49,66)
    close.AutoButtonColor = false
    close.Text = "✕"
    local uc2 = Instance.new("UICorner", close); uc2.CornerRadius = UDim.new(0,8)
    tween(card, {Position = UDim2.new(1,0,1,0)}, 0.22)
    task.delay(duration or 2.6, function() tween(card, {Position = UDim2.new(1,0,1,12), BackgroundTransparency = 1}, 0.22); task.wait(0.24); holder:Destroy() end)
    close.MouseButton1Click:Connect(function() holder:Destroy() end)
end
return UILibrary
